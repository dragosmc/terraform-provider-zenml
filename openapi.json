{
  "openapi": "3.1.0",
  "info": {
    "title": "ZenML Components API",
    "version": "0.68.0"
  },
  "paths": {
    "/api/v1/components": {
      "get": {
        "tags": ["stack_components"],
        "summary": "List Stack Components",
        "description": "Get a list of all stack components for a specific type.",
        "operationId": "list_stack_components_api_v1_components_get",
        "security": [{"CookieOAuth2TokenBearer": []}],
        "parameters": [
          {
            "name": "hydrate",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Hydrate"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "created",
              "title": "Sort By"
            }
          },
          {
            "name": "logical_operator",
            "in": "query",
            "required": false,
            "schema": {
              "allOf": [{"$ref": "#/components/schemas/LogicalOperators"}],
              "default": "and",
              "title": "Logical Operator"
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{"$ref": "#/components/schemas/StackComponentType"}, {"type": "null"}],
              "title": "Type"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Page_ComponentResponse_"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/v1/components/{component_id}": {
      "get": {
        "tags": ["stack_components"],
        "summary": "Get Stack Component",
        "description": "Returns the requested stack component.",
        "operationId": "get_stack_component_api_v1_components__component_id__get",
        "security": [{"CookieOAuth2TokenBearer": []}],
        "parameters": [
          {
            "name": "component_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Component Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComponentResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": ["stack_components"],
        "summary": "Update Stack Component",
        "description": "Updates a stack component.",
        "operationId": "update_stack_component_api_v1_components__component_id__put",
        "security": [{"CookieOAuth2TokenBearer": []}],
        "parameters": [
          {
            "name": "component_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Component Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ComponentUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComponentResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": ["stack_components"],
        "summary": "Delete Stack Component",
        "description": "Deletes a stack component.",
        "operationId": "delete_stack_component_api_v1_components__component_id__delete",
        "security": [{"CookieOAuth2TokenBearer": []}],
        "parameters": [
          {
            "name": "component_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Component Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/stacks": {
      "get": {
        "tags": ["stacks"],
        "summary": "List Stacks",
        "description": "Returns all stacks.",
        "operationId": "list_stacks_api_v1_stacks_get",
        "security": [{"CookieOAuth2TokenBearer": []}],
        "parameters": [
          {
            "name": "hydrate",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Hydrate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Page_StackResponse_"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/v1/stacks/{stack_id}": {
      "get": {
        "tags": ["stacks"],
        "summary": "Get Stack",
        "description": "Returns the requested stack.",
        "operationId": "get_stack_api_v1_stacks__stack_id__get",
        "security": [{"CookieOAuth2TokenBearer": []}],
        "parameters": [
          {
            "name": "stack_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Stack Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StackResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": ["stacks"],
        "summary": "Delete Stack",
        "description": "Deletes a stack.",
        "operationId": "delete_stack_api_v1_stacks__stack_id__delete",
        "security": [{"CookieOAuth2TokenBearer": []}],
        "parameters": [
          {
            "name": "stack_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Stack Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": ["stacks"],
        "summary": "Update Stack",
        "description": "Updates a stack.",
        "operationId": "update_stack_api_v1_stacks__stack_id__put",
        "security": [{"CookieOAuth2TokenBearer": []}],
        "parameters": [
          {
            "name": "stack_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Stack Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StackUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StackResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/service_connectors": {
      "get": {
        "tags": ["service_connectors"],
        "summary": "List Service Connectors",
        "description": "Get a list of all service connectors.",
        "operationId": "list_service_connectors_api_v1_service_connectors_get",
        "security": [{"CookieOAuth2TokenBearer": []}],
        "parameters": [
          {
            "name": "hydrate",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Hydrate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Page_ServiceConnectorResponse_"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/v1/workspaces": {
      "get": {
        "tags": ["workspaces"],
        "summary": "List Workspaces",
        "description": "Lists all workspaces in the organization.",
        "operationId": "list_workspaces_api_v1_workspaces_get",
        "security": [{"CookieOAuth2TokenBearer": []}],
        "parameters": [
          {
            "name": "hydrate",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Hydrate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Page_WorkspaceResponse_"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "tags": ["workspaces"],
        "summary": "Create Workspace",
        "description": "Creates a workspace based on the requestBody.",
        "operationId": "create_workspace_api_v1_workspaces_post",
        "security": [{"CookieOAuth2TokenBearer": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkspaceRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "409": {
            "description": "Conflict"
          }
        }
      }
    },
    "/api/v1/workspaces/{workspace_name_or_id}": {
      "get": {
        "tags": ["workspaces"],
        "summary": "Get Workspace",
        "description": "Get a workspace for given name.",
        "operationId": "get_workspace_api_v1_workspaces__workspace_name_or_id__get",
        "security": [{"CookieOAuth2TokenBearer": []}],
        "parameters": [
          {
            "name": "workspace_name_or_id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "string",
                  "format": "uuid"
                }
              ],
              "title": "Workspace Name Or Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": ["workspaces"],
        "summary": "Update Workspace",
        "description": "Update a workspace for given name.",
        "operationId": "update_workspace_api_v1_workspaces__workspace_name_or_id__put",
        "security": [{"CookieOAuth2TokenBearer": []}],
        "parameters": [
          {
            "name": "workspace_name_or_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Workspace Name Or Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkspaceUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": ["workspaces"],
        "summary": "Delete Workspace",
        "description": "Deletes a workspace.",
        "operationId": "delete_workspace_api_v1_workspaces__workspace_name_or_id__delete",
        "security": [{"CookieOAuth2TokenBearer": []}],
        "parameters": [
          {
            "name": "workspace_name_or_id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "string",
                  "format": "uuid"
                }
              ],
              "title": "Workspace Name Or Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/workspaces/{workspace_name_or_id}/stacks": {
      "get": {
        "tags": ["workspaces"],
        "summary": "List Workspace Stacks",
        "description": "Get stacks that are part of a specific workspace for the user.",
        "operationId": "list_workspace_stacks_api_v1_workspaces__workspace_name_or_id__stacks_get",
        "security": [{"CookieOAuth2TokenBearer": []}],
        "parameters": [
          {
            "name": "workspace_name_or_id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "string",
                  "format": "uuid"
                }
              ],
              "title": "Workspace Name Or Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Page_StackResponse_"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": ["workspaces"],
        "summary": "Create Stack",
        "description": "Creates a stack for a particular workspace.",
        "operationId": "create_stack_api_v1_workspaces__workspace_name_or_id__stacks_post",
        "security": [{"CookieOAuth2TokenBearer": []}],
        "parameters": [
          {
            "name": "workspace_name_or_id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "string",
                  "format": "uuid"
                }
              ],
              "title": "Workspace Name Or Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StackRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StackResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "409": {
            "description": "Conflict"
          }
        }
      }
    },
    "/api/v1/workspaces/{workspace_name_or_id}/components": {
      "get": {
        "tags": ["workspaces"],
        "summary": "List Workspace Stack Components",
        "description": "List stack components that are part of a specific workspace.",
        "operationId": "list_workspace_stack_components_api_v1_workspaces__workspace_name_or_id__components_get",
        "security": [{"CookieOAuth2TokenBearer": []}],
        "parameters": [
          {
            "name": "workspace_name_or_id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "string",
                  "format": "uuid"
                }
              ],
              "title": "Workspace Name Or Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Page_ComponentResponse_"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": ["workspaces"],
        "summary": "Create Stack Component",
        "description": "Creates a stack component.",
        "operationId": "create_stack_component_api_v1_workspaces__workspace_name_or_id__components_post",
        "security": [{"CookieOAuth2TokenBearer": []}],
        "parameters": [
          {
            "name": "workspace_name_or_id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "string",
                  "format": "uuid"
                }
              ],
              "title": "Workspace Name Or Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ComponentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComponentResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "409": {
            "description": "Conflict"
          }
        }
      }
    },
    "/api/v1/service_connectors/{connector_id}": {
      "get": {
        "tags": ["service_connectors"],
        "summary": "Get Service Connector",
        "description": "Gets a specific service connector.",
        "operationId": "get_service_connector_api_v1_service_connectors__connector_id__get",
        "security": [{"CookieOAuth2TokenBearer": []}],
        "parameters": [
          {
            "name": "connector_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Connector Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceConnectorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["service_connectors"],
        "summary": "Update Service Connector",
        "description": "Updates a service connector.",
        "operationId": "update_service_connector_api_v1_service_connectors__connector_id__put",
        "security": [{"CookieOAuth2TokenBearer": []}],
        "parameters": [
          {
            "name": "connector_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Connector Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceConnectorUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceConnectorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["service_connectors"],
        "summary": "Delete Service Connector",
        "description": "Deletes a service connector.",
        "operationId": "delete_service_connector_api_v1_service_connectors__connector_id__delete",
        "security": [{"CookieOAuth2TokenBearer": []}],
        "parameters": [
          {
            "name": "connector_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Connector Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response"
          }
        }
      }
    },
    "/api/v1/workspaces/{workspace_name_or_id}/service_connectors": {
      "post": {
        "tags": ["workspaces"],
        "summary": "Create Service Connector",
        "description": "Creates a service connector.",
        "operationId": "create_service_connector_api_v1_workspaces__workspace_name_or_id__service_connectors_post",
        "security": [{"CookieOAuth2TokenBearer": []}],
        "parameters": [
          {
            "name": "workspace_name_or_id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "string",
                  "format": "uuid"
                }
              ],
              "title": "Workspace Name Or Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceConnectorRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceConnectorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "StackComponentType": {
        "type": "string",
        "enum": [
          "alerter",
          "annotator",
          "artifact_store",
          "container_registry",
          "data_validator",
          "experiment_tracker",
          "feature_store",
          "image_builder",
          "model_deployer",
          "orchestrator",
          "step_operator",
          "model_registry"
        ],
        "title": "StackComponentType",
        "description": "All possible types a `StackComponent` can have."
      },
      "ComponentResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "The unique resource id."
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "title": "The name of the stack component."
          },
          "type": {
            "$ref": "#/components/schemas/StackComponentType"
          },
          "flavor": {
            "type": "string",
            "title": "The flavor of the stack component."
          },
          "configuration": {
            "type": "object",
            "title": "The stack component configuration."
          }
        },
        "required": ["id", "name", "type", "flavor", "configuration"],
        "title": "ComponentResponse",
        "description": "Response model for components."
      },
      "ComponentUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "The name of the stack component."
          },
          "configuration": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "The stack component configuration."
          }
        },
        "title": "ComponentUpdate",
        "description": "Update model for stack components."
      },
      "Page_ComponentResponse_": {
        "properties": {
          "index": {
            "type": "integer",
            "exclusiveMinimum": 0.0,
            "title": "Index"
          },
          "max_size": {
            "type": "integer",
            "exclusiveMinimum": 0.0,
            "title": "Max Size"
          },
          "total_pages": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Total Pages"
          },
          "total": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Total"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/ComponentResponse"
            },
            "type": "array",
            "title": "Items"
          }
        },
        "required": ["index", "max_size", "total_pages", "total", "items"],
        "title": "Page[ComponentResponse]"
      },
      "StackResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "The unique resource id."
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "title": "The name of the stack."
          },
          "components": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ComponentResponse"
              }
            },
            "title": "The components in this stack."
          }
        },
        "required": ["id", "name", "components"],
        "title": "StackResponse",
        "description": "Response model for stacks."
      },
      "Page_StackResponse_": {
        "properties": {
          "index": {
            "type": "integer",
            "exclusiveMinimum": 0.0,
            "title": "Index"
          },
          "max_size": {
            "type": "integer",
            "exclusiveMinimum": 0.0,
            "title": "Max Size"
          },
          "total_pages": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Total Pages"
          },
          "total": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Total"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/StackResponse"
            },
            "type": "array",
            "title": "Items"
          }
        },
        "required": ["index", "max_size", "total_pages", "total", "items"],
        "title": "Page[StackResponse]"
      },
      "ServiceConnectorResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "The unique resource id."
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "title": "The service connector name."
          },
          "connector_type": {
            "type": "string",
            "title": "The type of service connector."
          },
          "configuration": {
            "type": "object",
            "title": "The service connector configuration."
          }
        },
        "required": ["id", "name", "connector_type", "configuration"],
        "title": "ServiceConnectorResponse",
        "description": "Response model for service connectors."
      },
      "Page_ServiceConnectorResponse_": {
        "properties": {
          "index": {
            "type": "integer",
            "exclusiveMinimum": 0.0,
            "title": "Index"
          },
          "max_size": {
            "type": "integer",
            "exclusiveMinimum": 0.0,
            "title": "Max Size"
          },
          "total_pages": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Total Pages"
          },
          "total": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Total"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/ServiceConnectorResponse"
            },
            "type": "array",
            "title": "Items"
          }
        },
        "required": ["index", "max_size", "total_pages", "total", "items"],
        "title": "Page[ServiceConnectorResponse]"
      },
      "LogicalOperators": {
        "type": "string",
        "enum": ["or", "and"],
        "title": "LogicalOperators",
        "description": "Logical Ops to use to combine filters on list methods."
      },
      "ServiceConnectorRequest": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "title": "The service connector name."
          },
          "connector_type": {
            "type": "string",
            "title": "The type of service connector."
          },
          "configuration": {
            "type": "object",
            "title": "The service connector configuration, not including secrets."
          },
          "secrets": {
            "type": "object",
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "password",
                  "writeOnly": true
                },
                {
                  "type": "null"
                }
              ]
            },
            "title": "The service connector secrets."
          }
        },
        "required": ["name", "connector_type", "configuration"],
        "title": "ServiceConnectorRequest",
        "description": "Request model for service connectors."
      },
      "ServiceConnectorUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "The service connector name."
          },
          "configuration": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "The service connector configuration, not including secrets."
          },
          "secrets": {
            "anyOf": [
              {
                "type": "object",
                "additionalProperties": {
                  "anyOf": [
                    {
                      "type": "string",
                      "format": "password",
                      "writeOnly": true
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              },
              {
                "type": "null"
              }
            ],
            "title": "The service connector secrets."
          }
        },
        "title": "ServiceConnectorUpdate",
        "description": "Update model for service connectors."
      },
      "ServiceConnectorTypeModel": {
        "properties": {
          "name": {
            "type": "string",
            "title": "User readable name for the service connector type."
          },
          "connector_type": {
            "type": "string",
            "maxLength": 255,
            "title": "The type of service connector."
          },
          "description": {
            "type": "string",
            "title": "A description of the service connector.",
            "default": ""
          },
          "auth_methods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuthenticationMethodModel"
            },
            "title": "A list of authentication methods that are supported by the service connector."
          }
        },
        "required": ["name", "connector_type", "auth_methods"],
        "title": "ServiceConnectorTypeModel",
        "description": "Service connector type specification."
      },
      "AuthenticationMethodModel": {
        "properties": {
          "name": {
            "type": "string",
            "title": "User readable name for the authentication method."
          },
          "auth_method": {
            "type": "string",
            "maxLength": 255,
            "title": "The name of the authentication method."
          },
          "description": {
            "type": "string",
            "title": "A description of the authentication method.",
            "default": ""
          }
        },
        "required": ["name", "auth_method"],
        "title": "AuthenticationMethodModel",
        "description": "Authentication method specification."
      },
      "StackRequest": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "title": "The name of the stack."
          },
          "components": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            },
            "title": "The components in this stack."
          },
          "description": {
            "type": "string",
            "maxLength": 255,
            "title": "The description of the stack",
            "default": ""
          }
        },
        "required": ["name", "components"],
        "title": "StackRequest",
        "description": "Request model for stacks."
      },
      "WorkspaceRequest": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "title": "The unique name of the workspace."
          },
          "description": {
            "type": "string",
            "maxLength": 255,
            "title": "The description of the workspace.",
            "default": ""
          }
        },
        "required": ["name"],
        "title": "WorkspaceRequest",
        "description": "Request model for workspaces."
      },
      "WorkspaceResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "The unique resource id."
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "title": "The unique name of the workspace."
          },
          "description": {
            "type": "string",
            "maxLength": 255,
            "title": "The description of the workspace.",
            "default": ""
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "title": "The timestamp when this resource was created."
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "title": "The timestamp when this resource was last updated."
          }
        },
        "required": ["id", "name", "created", "updated"],
        "title": "WorkspaceResponse",
        "description": "Response model for workspaces."
      },
      "WorkspaceUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "The unique name of the workspace."
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "The description of the workspace."
          }
        },
        "title": "WorkspaceUpdate",
        "description": "Update model for workspaces."
      },
      "Page_WorkspaceResponse_": {
        "properties": {
          "index": {
            "type": "integer",
            "exclusiveMinimum": 0.0,
            "title": "Index"
          },
          "max_size": {
            "type": "integer",
            "exclusiveMinimum": 0.0,
            "title": "Max Size"
          },
          "total_pages": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Total Pages"
          },
          "total": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Total"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/WorkspaceResponse"
            },
            "type": "array",
            "title": "Items"
          }
        },
        "required": ["index", "max_size", "total_pages", "total", "items"],
        "title": "Page[WorkspaceResponse]"
      },
      "StackUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "The name of the stack."
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "The description of the stack"
          },
          "components": {
            "anyOf": [
              {
                "type": "object",
                "additionalProperties": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "type": "null"
              }
            ],
            "title": "The components in this stack."
          }
        },
        "title": "StackUpdate",
        "description": "Update model for stacks."
      }
    },
    "securitySchemes": {
      "CookieOAuth2TokenBearer": {
        "type": "oauth2",
        "flows": {
          "password": {
            "scopes": {},
            "tokenUrl": "/api/v1/login"
          }
        }
      }
    }
  }
}